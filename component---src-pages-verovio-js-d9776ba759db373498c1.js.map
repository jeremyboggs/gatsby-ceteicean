{"version":3,"file":"component---src-pages-verovio-js-d9776ba759db373498c1.js","mappings":"mMAQA,MANaA,IAAc,IAAb,MAACC,GAAMD,EACnB,OACEE,EAAAA,cAAA,aAAQD,EAAc,ECe1B,MAfYD,IAAqC,IAApC,SAAEG,EAAQ,MAAEF,EAAK,UAAEG,GAAWJ,EACzC,OACEE,EAAAA,cAAA,OAAKG,UAAU,OACbH,EAAAA,cAAA,UAAKD,GACLC,EAAAA,cAAA,UACGE,EAAUE,KAAIC,GACbL,EAAAA,cAAA,MAAIM,IAAKD,EAAEE,KAAMJ,UAAWF,IAAaI,EAAEE,KAAKC,cAAgB,SAAW,IACzER,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAIL,EAAEM,MAAON,EAAEE,UAIvB,ECkBV,MAzBeT,IAA6B,IAA5B,SAAEG,EAAQ,SAAEW,GAAUd,EACpC,MAAMe,GAAOC,EAAAA,EAAAA,IAAe,eAatB,MAACf,EAAK,UAAEG,GAAaW,EAAKE,KAAKC,aACrC,OACEhB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACiB,EAAI,CAAClB,MAAOA,IACbC,EAAAA,cAACkB,EAAG,CAACjB,SAAUA,GAAY,GAAIF,MAAOA,EAAOG,UAAWA,IACxDF,EAAAA,cAAA,QAAMG,UAAU,WAAWS,GAC3BZ,EAAAA,cAAA,UAAQG,UAAU,UAAS,oFAC1B,C,qCCjBP,IATcL,IAAkC,IAAjC,MAAEC,EAAK,OAAEoB,EAAM,SAAEP,GAAUd,EAExC,OAAQE,EAAAA,cAAA,OAAKG,UAAU,SACnBH,EAAAA,cAAA,UAAKD,GACLC,EAAAA,cAAA,QAAMG,UAAU,QAAQiB,QAASD,GAAQ,KACxCP,EACG,C,gEC0EV,UA9EgBS,KAGd,MAAOC,EAAKC,GAAUvB,EAAAA,YAEfwB,EAAWC,GAAgBzB,EAAAA,UAAe,IAE1C0B,EAAWC,GAAgB3B,EAAAA,WAE5B4B,EAAS5B,EAAAA,SAEfA,EAAAA,WAAgB,KAEd,MAAM6B,EAASC,SAASC,cAAc,UACtCF,EAAOG,KAAO,yBACdH,EAAOI,IACL,oEACFH,SAASI,KAAKC,YAAYN,GAE1B,MAAMO,EAAiBA,KACrBC,OAAOC,QAAQC,OAAOC,qBAAuBC,UAC3C,MAAMC,EAAK,IAAIL,OAAOC,QAAQK,QAC9BC,MAAM,sEACHC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACLN,EAAGO,WAAW,CACZC,MAAO,GACPC,WAAW,EACXC,iBAAiB,IAEnB7B,EAAOmB,EAAGW,WAAWL,EAAQ,CAAC,GAAG,GACjC,CACL,EAMH,OAHAnB,EAAOyB,OAAQ,EACfzB,EAAO0B,iBAAiB,OAAQnB,GAEzB,KACLP,EAAO2B,oBAAoB,OAAQpB,EAAe,CACnD,GACA,IAGHpC,EAAAA,iBAAsB,KAIpB,GAAI4B,EAAO6B,QAAS,CACD7B,EAAO6B,QACfC,iBAAiB,UAAUC,SAAQ,SAAUC,GACpDA,EAAML,iBAAiB,SAAUM,IAE/BlC,EAAa,CACX5B,MAAO,OACPoB,OAAQA,KAAOM,GAAa,EAAM,EAClCqC,QAAS,sCAEXrC,GAAa,EAAK,GAEtB,GACF,IACC,CAACH,IAEJ,MAAMyC,EAAQzC,EACVtB,EAAAA,cAAA,OAAKgE,wBAAyB,CAACC,OAAQ3C,GAAM4C,IAAKtC,IAAY,qBAE5DuC,EAAQ3C,EAAYxB,EAAAA,cAACoE,EAAAA,EAAU1C,EAAaA,EAAUoC,SAAmB,KAE/E,OACE9D,EAAAA,cAACqE,EAAAA,EAAM,CAACpE,SAAS,QACfD,EAAAA,cAAA,UAAI,mBACH+D,EACAI,EACM,C","sources":["webpack://gatsby-ceteicean-workshop/./src/components/head.js","webpack://gatsby-ceteicean-workshop/./src/components/nav.js","webpack://gatsby-ceteicean-workshop/./src/components/layout.js","webpack://gatsby-ceteicean-workshop/./src/components/popup.js","webpack://gatsby-ceteicean-workshop/./src/pages/verovio.js"],"sourcesContent":["import React from \"react\"\n\nconst Head = ({title}) => {\n  return (\n    <title>{title}</title>\n  )\n}\n\nexport default Head","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./nav.css\"\n\nconst Nav = ({ location, title, menuLinks }) => {\n  return (\n    <div className=\"Nav\">\n      <h1>{title}</h1>\n      <ul>\n        {menuLinks.map(m => (\n          <li key={m.name} className={location === m.name.toLowerCase() ? 'active' : ''}>\n            <Link to={m.link}>{m.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Nav","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Head from \"./head\"\nimport Nav from \"./nav\"\n\nimport \"./layout.css\"\n\nconst Layout = ({ location, children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteInfoQuery {\n      site {\n        siteMetadata {\n          title\n          menuLinks {\n            name\n            link\n          }\n        }\n      }\n    }\n  `)\n  const {title, menuLinks} = data.site.siteMetadata\n  return (\n    <>\n      <Head title={title}/>\n      <Nav location={location || ''} title={title} menuLinks={menuLinks} />\n      <main className=\"Content\">{children}</main>\n      <footer className=\"Footer\">Gastby CETEIcean Workshop - Code license: MIT - Contents license: CC-A-NC-SA 4.0</footer>\n    </>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport \"./popup.css\"\n\nconst Popup = ({ title, toggle, children }) => {\n\n  return (<div className=\"Popup\">\n      <h2>{title}</h2>\n      <span className=\"Close\" onClick={toggle}>X</span>\n      {children}\n    </div>)\n}\n\nexport default Popup","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Popup from \"../components/popup\"\nimport \"./verovio.css\"\n\nconst Verovio = () => {\n\n  // This state keeps track of the SVG rendered by Verovio\n  const [svg, setSvg] = React.useState()\n  // This state indicates whether we need to show a popup or not\n  const [showPopup, setShowPopup] = React.useState(false)\n  // This state hold data to show in a popup\n  const [popupData, setPopupData] = React.useState()\n  // This will let us access the SVG DOM once it's available.\n  const verRef = React.useRef()\n\n  React.useEffect(() => {\n    // We load Verovio dynamically. useEffect() runs after rendering\n    const script = document.createElement(\"script\");\n    script.type = \"application/javascript\";\n    script.src =\n      \"https://www.verovio.org/javascript/latest/verovio-toolkit-wasm.js\";\n    document.body.appendChild(script);\n\n    const verovioHandler = () => {\n      window.verovio.module.onRuntimeInitialized = async _ => {\n        const tk = new window.verovio.toolkit()\n        fetch(\"https://www.verovio.org/examples/downloads/Schubert_Lindenbaum.mei\")\n          .then((response) => response.text())\n          .then((meiXML) => {\n            tk.setOptions({\n              scale: 30,\n              landscape: true,\n              adjustPageWidth: true\n            });\n            setSvg(tk.renderData(meiXML, {}));\n          });\n      }\n    }\n\n    script.defer = true;\n    script.addEventListener(\"load\", verovioHandler);\n    // Event handlers should always be removed.\n    return () => {\n      script.removeEventListener(\"load\", verovioHandler);\n    }\n  }, []) // [] is used to run this once.\n\n  // useLayoutEffect runs after changes to the HTML DOM. We use it to interact with the SVG DOM once it's loaded\n  React.useLayoutEffect(() => {\n    // This is give us access to the Verovio SVG DOM to add interactivity.\n    // A more \"reacty\" way of handling this would require routing SVG elements of note to React components\n    // (Like what we do with TEI). \n    if (verRef.current) {\n      const notation = verRef.current;\n      notation.querySelectorAll('g.beam').forEach(function (chord) {\n        chord.addEventListener(\"click\", (event) => {\n          // We adjust the state to show a popup.\n          setPopupData({\n            title: \"Info\",\n            toggle: () => {setShowPopup(false)},\n            content: \"You clicked on some beamed notes!\"\n          })\n          setShowPopup(true)\n        });\n      })\n    }\n  }, [svg]) // this will run every time the svg state changes.\n\n  const score = svg \n    ? <div dangerouslySetInnerHTML={{__html: svg}} ref={verRef}/> : \"Loading Verovio...\"\n\n  const popup = showPopup ? <Popup {...popupData} >{popupData.content}</Popup> : null\n\n  return (\n    <Layout location=\"home\">\n      <h1>Verovio example</h1>\n      {score}\n      {popup}\n    </Layout>\n  )\n}\n\nexport default Verovio\n"],"names":["_ref","title","React","location","menuLinks","className","map","m","key","name","toLowerCase","Link","to","link","children","data","useStaticQuery","site","siteMetadata","Head","Nav","toggle","onClick","Verovio","svg","setSvg","showPopup","setShowPopup","popupData","setPopupData","verRef","script","document","createElement","type","src","body","appendChild","verovioHandler","window","verovio","module","onRuntimeInitialized","async","tk","toolkit","fetch","then","response","text","meiXML","setOptions","scale","landscape","adjustPageWidth","renderData","defer","addEventListener","removeEventListener","current","querySelectorAll","forEach","chord","event","content","score","dangerouslySetInnerHTML","__html","ref","popup","Popup","Layout"],"sourceRoot":""}